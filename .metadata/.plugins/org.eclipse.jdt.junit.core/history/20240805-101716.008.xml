<?xml version="1.0" encoding="UTF-8"?><testrun name="TicTacToeGameTest" project="TicTacToeTDD" tests="2" started="2" failures="1" errors="0" ignored="0">
  <testsuite name="com.apro.model.TicTacToeGameTest" time="0.037" displayname="TicTacToeGameTest" uniqueid="[engine:junit-jupiter]/[class:com.apro.model.TicTacToeGameTest]">
    <testcase name="testCheckInput" classname="com.apro.model.TicTacToeGameTest" time="0.013" displayname="testCheckInput()" uniqueid="[engine:junit-jupiter]/[class:com.apro.model.TicTacToeGameTest]/[method:testCheckInput()]"/>
    <testcase name="testHasWon" classname="com.apro.model.TicTacToeGameTest" time="0.024" displayname="testHasWon()" uniqueid="[engine:junit-jupiter]/[class:com.apro.model.TicTacToeGameTest]/[method:testHasWon()]">
      <failure>
        <expected>true</expected>
        <actual>false</actual>org.opentest4j.AssertionFailedError: has won method should check if a player has won ==&gt; expected: &lt;true&gt; but was: &lt;false&gt;&#13;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)&#13;
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)&#13;
	at org.junit.jupiter.api.AssertTrue.failNotTrue(AssertTrue.java:63)&#13;
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:36)&#13;
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:214)&#13;
	at com.apro.model.TicTacToeGameTest.testHasWon(TicTacToeGameTest.java:27)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at java.util.ArrayList.forEach(ArrayList.java:1257)&#13;
	at java.util.ArrayList.forEach(ArrayList.java:1257)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
</testrun>
